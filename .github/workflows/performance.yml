name: Performance Monitoring

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # Run performance tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  lighthouse-ci:
    name: Lighthouse CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.4'
          cache: 'npm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm build
        env:
          NODE_ENV: production
          CI: true

      - name: Start application
        run: |
          cd apps/web && pnpm start &
          sleep 10
          curl -f http://localhost:3000 || exit 1
        env:
          NODE_ENV: production

      - name: Run Lighthouse CI
        run: |
          pnpm exec lhci autorun
          if [ -f .lighthouseci/manifest.json ]; then
            echo "lighthouse-report-url=$(cat .lighthouseci/manifest.json | jq -r '.[0].url')" >> $GITHUB_OUTPUT
          fi
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Lighthouse reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-reports
          path: .lighthouseci
          retention-days: 30

  bundle-analysis:
    name: Bundle Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.4'
          cache: 'npm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build with bundle analysis
        run: |
          cd apps/web
          ANALYZE=true CI=true pnpm build
        env:
          NODE_ENV: production

      - name: Upload bundle analysis
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: |
            apps/web/analyze/
            apps/web/.next/analyze/
          retention-days: 30

      - name: Check bundle size
        run: |
          if [ -f apps/web/analyze/client-stats.json ]; then
            node -e "
              const stats = require('./apps/web/analyze/client-stats.json');
              const totalSize = stats.assets.reduce((acc, asset) => acc + asset.size, 0);
              const sizeMB = (totalSize / 1024 / 1024).toFixed(2);
              console.log('Bundle size: ' + sizeMB + ' MB');
              
              // Fail if bundle is too large (adjust threshold as needed)
              if (totalSize > 5 * 1024 * 1024) { // 5MB threshold
                console.error('Bundle size exceeds 5MB threshold!');
                process.exit(1);
              }
            "
          fi

      - name: Comment bundle size on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            try {
              const statsPath = 'apps/web/analyze/client-stats.json';
              if (fs.existsSync(statsPath)) {
                const stats = JSON.parse(fs.readFileSync(statsPath, 'utf8'));
                const totalSize = stats.assets.reduce((acc, asset) => acc + asset.size, 0);
                const sizeMB = (totalSize / 1024 / 1024).toFixed(2);
                
                const comment = `## 📊 Bundle Analysis
                
                **Bundle Size**: ${sizeMB} MB
                
                <details>
                <summary>View Bundle Composition</summary>
                
                | Asset | Size | Chunks |
                |-------|------|--------|
                ${stats.assets.slice(0, 10).map(asset => 
                  `| ${asset.name} | ${(asset.size / 1024).toFixed(1)} KB | ${asset.chunks?.join(', ') || 'N/A'} |`
                ).join('\n')}
                
                ${stats.assets.length > 10 ? `... and ${stats.assets.length - 10} more assets` : ''}
                </details>
                
                > Generated by Bundle Analysis CI`;
                
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: comment
                });
              }
            } catch (error) {
              console.log('Could not generate bundle analysis comment:', error.message);
            }

  performance-regression:
    name: Performance Regression Detection
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}
          path: base

      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          path: pr

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.4'
          cache: 'npm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Build base version
        run: |
          cd base
          pnpm install --frozen-lockfile
          cd apps/web
          ANALYZE=true CI=true pnpm build
          cp analyze/client-stats.json ../../base-stats.json

      - name: Build PR version
        run: |
          cd pr
          pnpm install --frozen-lockfile
          cd apps/web
          ANALYZE=true CI=true pnpm build
          cp analyze/client-stats.json ../../pr-stats.json

      - name: Compare bundle sizes
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            const baseStats = JSON.parse(fs.readFileSync('base-stats.json', 'utf8'));
            const prStats = JSON.parse(fs.readFileSync('pr-stats.json', 'utf8'));

            const baseSize = baseStats.assets.reduce((acc, asset) => acc + asset.size, 0);
            const prSize = prStats.assets.reduce((acc, asset) => acc + asset.size, 0);

            const sizeDiff = prSize - baseSize;
            const sizePercent = ((sizeDiff / baseSize) * 100).toFixed(2);

            const formatSize = (bytes) => (bytes / 1024 / 1024).toFixed(2) + ' MB';

            let status = '✅';
            let message = 'Bundle size unchanged or decreased';

            if (sizeDiff > 100 * 1024) { // 100KB threshold
              status = '⚠️';
              message = 'Bundle size increased significantly';
              
              if (sizeDiff > 500 * 1024) { // 500KB threshold
                status = '❌';
                message = 'Bundle size increased too much';
              }
            }

            const comment = `## ${status} Bundle Size Comparison

            | Metric | Base | PR | Change |
            |--------|------|----|----|
            | **Bundle Size** | ${formatSize(baseSize)} | ${formatSize(prSize)} | ${sizeDiff > 0 ? '+' : ''}${formatSize(sizeDiff)} (${sizePercent}%) |

            ${message}

            ${sizeDiff > 500 * 1024 ? '⚠️ **This PR significantly increases the bundle size. Please review and optimize.**' : ''}`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

            // Fail CI if bundle size increased too much
            if (sizeDiff > 1024 * 1024) { // 1MB threshold
              core.setFailed('Bundle size increased by more than 1MB');
            }
